import os
import sys
import datetime
import django
from recommonmark.parser import CommonMarkParser

# Monkey patch fix: https://stackoverflow.com/questions/70382084/import-error-force-text-from-django-utils-encoding
from django.utils.encoding import force_str
django.utils.encoding.force_text = force_str

django_version = ".".join(map(str, django.VERSION[0:2]))
python_version = ".".join(map(str, sys.version_info[0:2]))
# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'Django'
copyright = '2022, Tim Schupp'
author = 'Tim Schupp'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.

# You can only build these docks from inside the container!
sys.path.insert(0, os.path.abspath('/app/backend'))
sys.path.insert(0, os.path.abspath('/app/extra_mods'))
sys.path.insert(0, os.path.abspath('/app'))
os.environ['DJANGO_SETTINGS_MODULE'] = 'back.settings'
django.setup()

os.environ['SPHINX_APIDOC_OPTIONS'] = "members,show-inheritance"

extensions = [
    'sphinxcontrib.apidoc',   # runs sphinx-apidoc automatically as part of sphinx-build
    'sphinx.ext.autodoc',     # the autodoc extensions uses files generated by apidoc
    'sphinxcontrib_django',   # does some nicer django autodoc formatting, but:
                              # https://github.com/edoburu/sphinxcontrib-django/issues/12
    'sphinx.ext.viewcode',    # enable viewing autodoc'd code
    'sphinx.ext.intersphinx',  # make links between different sphinx-documented packages
    'sphinx.ext.todo',        # TODO: figure out how to use this;-)
    'sphinx_markdown_tables',  # CommonMark doesn't do tables: This extensions does!
    'sphinxcontrib.confluencebuilder',  # supposedly installs docs on Confluence
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

source_parsers = {
    '.md': CommonMarkParser,
}
source_suffix = ['.rst', '.md']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['build']

# https://stackoverflow.com/questions/56336234/build-fail-sphinx-error-contents-rst-not-found
master_doc = 'index'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'
html_theme = 'sphinx_rtd_theme'

html_theme_options = {
    # these are for sphinx_rtd_theme:
    'prev_next_buttons_location': 'both',
    'collapse_navigation': True,
    # these are for alabaster:
    # 'show_relbars': True,
    # 'fixed_sidebar': True,
    # 'sidebar_collapse': True,
}

autodoc_member_order = 'bysource'
autodoc_inherit_docstrings = False

apidoc_module_dir = '/app'
apidoc_output_dir = 'apidoc'
apidoc_excluded_paths = ['/app/migrations']
apidoc_separate_modules = True
apidoc_toc_file = False
apidoc_module_first = True
apidoc_extra_args = ['-f']

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

intersphinx_mapping = {
    'python': ('https://docs.python.org/{}'.format(python_version), None),
    'django': ('https://docs.djangoproject.com/en/{}/'.format(django_version),
               'https://docs.djangoproject.com/en/{}/_objects/'.format(django_version)),
    # not sure why but the default lookup of objects.inv fails with None
    'djangorestframework-jsonapi': ('https://django-rest-framework-json-api.readthedocs.io/en/stable/',
                                    'https://django-rest-framework-json-api.readthedocs.io/en/stable/objects.inv'),
    # DRF doesn't use sphinx but rather mkdocs:-(
    # 'djangorestframework': ('https://django-rest-framework.org/', None),
}
